% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/nonnull.logplatt.on.validation.set.R
\name{nonnull.logplatt.on.validation.set}
\alias{nonnull.logplatt.on.validation.set}
\title{Generate non-null (matching) Platt scores from a validation set.}
\usage{
nonnull.logplatt.on.validation.set(dat.tr, lbls.tr, dat.val, lbls.val, svmtyp,
  kern, pparams)
}
\arguments{
\item{dat.tr}{Training data set.}

\item{lbls.tr}{Training set labels.}

\item{dat.val}{Validation set data set.}

\item{lbls.val}{Validation set labels.}

\item{svmtyp}{SVM type. See e1071 documentation.}

\item{kern}{Kernel type. See e1071 documentation.}

\item{pparams}{Penalty parameters. See e1071 documentation.}
}
\value{
An array of non-null scires on the validation set.
}
\description{
Estimate non-null Platt-scores using a trained SVM and a validation set not used in training.
}
\details{
User can opt to get non-null Platt scores off a single run on a held out validation set. These, combined with a set of (perferabley IID)
null scores can go on to be used to fit an fdr model. Null Platt scores (non-match) on the input validation set are NOT returned with this function
as they are known to be dependent. To obtain a set of null scores for an fdr fit, its suggested to either (1) fit a bootstraped set of null Platt
scrores to a known parametric form (e.g. a Gaussian or NIG) and sample a set if IID null scores from that fit distribution, (2) use the bootstrap
procedure on the held out validation set to obtain a null AND a non-null set of Platt scores (i.e. don't use the non-null scores obtained from
this function).
}
\examples{
XXXX
}

